  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

  &encoder {
    status = "okay";
  };

  / {
    combos {
      compatible = "zmk,combos";
      combo_num {
        timeout-ms = <50>;
        key-positions = <6 7 8>;
        bindings = <&to 2>;
      };

      combo_symb {
        timeout-ms = <50>;
        key-positions = <1 2 3>;
        bindings = <&to 3>;
      };

      combo_nav {
        timeout-ms = <50>;
        key-positions = <2 6 8>;
        bindings = <&to 4>;
      };

      combo_func {
        timeout-ms = <50>;
        key-positions = <11 12 13>;
        bindings = <&to 5>;
      };

      combo_conf {
        timeout-ms = <50>;
        key-positions = <1 2 8>;
        bindings = <&to 6>;
      };

    };
  };

  / {
    behaviors {
      td0: tap_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&mt CAPSLOCK LSHIFT>, <&sk LCTRL>;
      };
    };
  };

  / {
    keymap {
      compatible = "zmk,keymap";
  
        default_layer {
            bindings = <
            &kp F &kp D &kp N &kp I &kp G  
            &kp S &kp T &kp H &kp E &kp O 
            &kp C &kp W &kp R &kp Z &kp U 
                              &kp ENTER &lt 1 SPACE &td0 &kp BSPC &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        layer1 {
            bindings = <
            &kp J &kp K &kp M &kp DOT &kp COMMA 
            &kp Y &kp P &kp L &kp Q &kp SEMICOLON 
            &kp X &kp B &kp V &kp Z &kp COLON 
                              &none &none &td0 &kt LEFT_CONTROL &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        layer2 {
            bindings = <
            &kp KP_N6 &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp DLLR 
            &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N4 &kp KP_N5 
            &kp EQUAL &kp KP_PLUS &kp KP_MINUS &kp KP_N0 &kp COMMA 
                                                  &to 0 &kp PERCENT &kp HASH &kp CARET &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        layer3 {
            bindings = <
            &kp LEFT_BRACKET &kp LBRC &kp LPAR &kp AT &kp CARET 
            &kp COLON &kp SEMICOLON &kp QUESTION &kp EXCL &kp SLASH 
            &kp RIGHT_BRACKET &kp RBRC &kp RPAR &kp AMPS &kp ASTRK 
                                                      &to 0 &kp LT &kp GT &kp TILDE &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        layer4 {
            bindings = <
            &kp PAGE_DOWN &kp C_AC_BACK &kp UP &kp C_AC_FORWARD &kp PAGE_UP 
            &kp LC(Z) &kp LEFT &kp DOWN &kp RIGHT &kp TAB 
            &kp LC(Y) &kp LC(X) &kp LC(C) &kp LC(V) &kp ENTER 
                                         &to 0 &kp LS(LCTRL) &kp LC(F) &kp LEFT_WIN &kp C_MUTE
          >;
          sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        layer5 {
            bindings = <
            &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
            &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 
            &none &none &none &kp F11 &kp F12 
                                    &to 0 &none &trans &none &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        bt_layer {
            bindings = <
            &none &none &none &none &none 
            &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none 
            &ext_power EP_ON &ext_power EP_OFF &none &none &none 
                                    &to 0 &none &none &bootloader &kp C_MUTE
          >;
          sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
  };
  